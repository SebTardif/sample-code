# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    machine: true
    working_directory: ~/app
    context: tl_scan_context
    
# In this example, we're using a CircleCI context (https://circleci.com/docs/2.0/contexts/)
# to store the username & password of our Twistlock CI user account
# and the URL to our console

# TL_USER:  The Twistlock user with the CI User role
# TL_PASS:  The password for this user account
# TL_CONSOLE_URL:  The base URL for the console -- http://console.<my_company>.com:8083 -- without a trailing /

    steps:
      - checkout
      - run: curl -k -u $TL_USER:$TL_PASS --output ~/app/twistcli $TL_CONSOLE_URL/api/v1/util/twistcli
      - run: sudo chmod a+x ./twistcli
      - run: docker build -t corp/helloworld:$CIRCLE_BRANCH .
      - run: ./twistcli images scan --details -address $TL_CONSOLE_URL -u $TL_USER -p $TL_PASS corp/helloworld:$CIRCLE_BRANCH
      # Add --vulnerability-threshold and/or --compliance-threshold to this command to
      # fail builds based on the thresholds.
      # See twistcli documentation for more details.
  # add any additional commands needed to test the image, push to a registry, etc.
